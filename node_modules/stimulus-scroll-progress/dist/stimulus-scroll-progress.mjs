import { Controller as r } from "@hotwired/stimulus";
function n(i, e) {
  let t = !1;
  return (...o) => {
    t || (i.apply(this, o), t = !0, setTimeout(() => {
      t = !1;
    }, e));
  };
}
const l = class l extends r {
  initialize() {
    this.scroll = this.scroll.bind(this);
  }
  connect() {
    this.throttleDelayValue > 0 && (this.scroll = n(this.scroll, this.throttleDelayValue)), window.addEventListener("scroll", this.scroll, { passive: !0 }), this.scroll();
  }
  disconnect() {
    window.removeEventListener("scroll", this.scroll);
  }
  scroll() {
    const e = document.documentElement.scrollHeight - document.documentElement.clientHeight, t = window.scrollY / e * 100;
    this.element.style.width = `${t}%`;
  }
};
l.values = {
  throttleDelay: {
    type: Number,
    default: 15
  }
};
let s = l;
export {
  s as default
};
